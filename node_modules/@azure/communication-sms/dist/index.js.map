{"version":3,"file":"index.js","sources":["../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/sms.ts","../src/generated/src/smsApiClientContext.ts","../src/generated/src/smsApiClient.ts","../src/constants.ts","../src/tracing.ts","../src/logger.ts","../src/extractOperationOptions.ts","../src/utils/uuid.ts","../src/utils/smsUtils.ts","../src/smsClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const SendMessageRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendMessageRequest\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      smsRecipients: {\n        serializedName: \"smsRecipients\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"SmsRecipient\" } }\n        }\n      },\n      message: {\n        constraints: {\n          MaxLength: 2048\n        },\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      smsSendOptions: {\n        serializedName: \"smsSendOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"SmsSendOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmsRecipient: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SmsRecipient\",\n    modelProperties: {\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      repeatabilityRequestId: {\n        serializedName: \"repeatabilityRequestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      repeatabilityFirstSent: {\n        serializedName: \"repeatabilityFirstSent\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmsSendOptions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SmsSendOptions\",\n    modelProperties: {\n      enableDeliveryReport: {\n        serializedName: \"enableDeliveryReport\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tag: {\n        serializedName: \"tag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmsSendResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SmsSendResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SmsSendResponseItem\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SmsSendResponseItem: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SmsSendResponseItem\",\n    modelProperties: {\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      messageId: {\n        serializedName: \"messageId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpStatusCode: {\n        serializedName: \"httpStatusCode\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      repeatabilityResult: {\n        serializedName: \"repeatabilityResult\",\n        type: {\n          name: \"String\"\n        }\n      },\n      successful: {\n        serializedName: \"successful\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-http\";\nimport { SendMessageRequest as SendMessageRequestMapper } from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sendMessageRequest: OperationParameter = {\n  parameterPath: \"sendMessageRequest\",\n  mapper: SendMessageRequestMapper\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-03-07\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SmsApiClient } from \"../smsApiClient\";\nimport { SendMessageRequest, SmsSendOperationResponse } from \"../models\";\n\n/**\n * Class representing a Sms.\n */\nexport class Sms {\n  private readonly client: SmsApiClient;\n\n  /**\n   * Initialize a new instance of the class Sms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SmsApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Sends a SMS message from a phone number that belongs to the authenticated account.\n   * @param sendMessageRequest Represents the body of the send message request.\n   * @param options The options parameters.\n   */\n  send(\n    sendMessageRequest: SendMessageRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<SmsSendOperationResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { sendMessageRequest, options: operationOptions },\n      sendOperationSpec\n    ) as Promise<SmsSendOperationResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst sendOperationSpec: coreHttp.OperationSpec = {\n  path: \"/sms\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.SmsSendResponse\n    }\n  },\n  requestBody: Parameters.sendMessageRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { SmsApiClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-sms\";\nconst packageVersion = \"1.0.0\";\n\nexport class SmsApiClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the SmsApiClientContext class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: SmsApiClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2021-03-07\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { SmsApiClientContext } from \"./smsApiClientContext\";\nimport { SmsApiClientOptionalParams } from \"./models\";\n\nclass SmsApiClient extends SmsApiClientContext {\n  /**\n   * Initializes a new instance of the SmsApiClient class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: SmsApiClientOptionalParams) {\n    super(endpoint, options);\n    this.sms = new operations.Sms(this);\n  }\n\n  sms: operations.Sms;\n}\n\n// Operation Specifications\n\nexport {\n  SmsApiClient,\n  SmsApiClientContext,\n  Models as SmsApiModels,\n  Mappers as SmsApiMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Communication\",\n  namespace: \"Microsoft.Communication\"\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-sms\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions } from \"@azure/core-http\";\n\nexport const extractOperationOptions = <T extends OperationOptions>(\n  obj: T\n): {\n  operationOptions: OperationOptions;\n  restOptions: Pick<T, Exclude<keyof T, keyof OperationOptions>>;\n} => {\n  const { abortSignal, requestOptions, tracingOptions, ...restOptions } = obj;\n\n  return {\n    operationOptions: {\n      abortSignal,\n      requestOptions,\n      tracingOptions\n    },\n    restOptions\n  };\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { generateUuid } from \"@azure/core-http\";\n\n// This is used as a workaround to be able to stub generateUuid\n// during testing.\nexport class Uuid {\n  public static generateUuid(): string {\n    return generateUuid();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SendMessageRequest } from \"../generated/src/models\";\nimport { SmsSendOptions, SmsSendRequest } from \"../smsClient\";\nimport { Uuid } from \"./uuid\";\nimport { SmsSendOptions as InternalOptions } from \"../generated/src/models\";\n\nexport function generateSendMessageRequest(\n  smsRequest: SmsSendRequest,\n  options: SmsSendOptions = {}\n): SendMessageRequest {\n  const _smsSendOptions: InternalOptions = {\n    enableDeliveryReport: options.enableDeliveryReport ?? false\n  };\n  if (options.tag) {\n    _smsSendOptions[\"tag\"] = options.tag;\n  }\n\n  return {\n    from: smsRequest.from,\n    smsRecipients: smsRequest.to.map((phoneNumberStr) => {\n      return {\n        to: phoneNumberStr,\n        repeatabilityFirstSent: new Date(Date.now()).toUTCString(),\n        repeatabilityRequestId: Uuid.generateUuid()\n      };\n    }),\n    message: smsRequest.message,\n    smsSendOptions: {\n      enableDeliveryReport: options.enableDeliveryReport ?? false,\n      ...(options.tag && { tag: options.tag })\n    }\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport {\n  parseClientArguments,\n  isKeyCredential,\n  createCommunicationAuthPolicy\n} from \"@azure/communication-common\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  PipelineOptions,\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  OperationOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { SmsApiClient } from \"./generated/src/smsApiClient\";\nimport { SDK_VERSION } from \"./constants\";\nimport { createSpan } from \"./tracing\";\nimport { logger } from \"./logger\";\nimport { extractOperationOptions } from \"./extractOperationOptions\";\nimport { generateSendMessageRequest } from \"./utils/smsUtils\";\n\n/**\n * Client options used to configure SMS Client API requests.\n */\nexport interface SmsClientOptions extends PipelineOptions {}\n\n/**\n * Values used to configure Sms message\n */\nexport interface SmsSendRequest {\n  /**\n   * The sender's phone number in E.164 format that is owned by the authenticated account.\n   */\n  from: string;\n  /**\n   * The list of recipient's phone number in E.164 format.\n   */\n  to: string[];\n  /**\n   * The contents of the message that will be sent to the recipient. The allowable content is\n   * defined by RFC 5724.\n   */\n  message: string;\n}\n\n/**\n * Options to configure Sms requests\n */\nexport interface SmsSendOptions extends OperationOptions {\n  /**\n   * Enable this flag to receive a delivery report for this message on the Azure Resource\n   * EventGrid. Default value: false.\n   */\n  enableDeliveryReport?: boolean;\n  /**\n   * Use this field to provide metadata that will then be sent back in the corresponding Delivery\n   * Report.\n   */\n  tag?: string;\n}\n\nexport interface SmsSendResult {\n  /**\n   * The recipient's phone number in E.164 format.\n   */\n  to: string;\n  /**\n   * The identifier of the outgoing Sms message. Only present if message processed.\n   */\n  messageId?: string;\n  /**\n   * HTTP Status code.\n   */\n  httpStatusCode: number;\n  /**\n   * Indicates if the message is processed successfully or not.\n   */\n  successful: boolean;\n  /**\n   * Optional error message in case of 4xx/5xx/repeatable errors.\n   */\n  errorMessage?: string;\n}\n\n/**\n * Checks whether the type of a value is SmsClientOptions or not.\n *\n * @param options - The value being checked.\n */\nconst isSmsClientOptions = (options: any): options is SmsClientOptions =>\n  !!options && !isKeyCredential(options);\n\n/**\n * A SmsClient represents a Client to the Azure Communication Sms service allowing you\n * to send SMS messages.\n */\nexport class SmsClient {\n  private readonly api: SmsApiClient;\n\n  /**\n   * Initializes a new instance of the SmsClient class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(connectionString: string, options?: SmsClientOptions);\n\n  /**\n   * Initializes a new instance of the SmsClient class using an Azure KeyCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential - An object that is used to authenticate requests to the service. Use the Azure KeyCredential or `@azure/identity` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(endpoint: string, credential: KeyCredential, options?: SmsClientOptions);\n\n  /**\n   * Initializes a new instance of the SmsClient class using a TokenCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential - TokenCredential that is used to authenticate requests to the service.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(endpoint: string, credential: TokenCredential, options?: SmsClientOptions);\n\n  constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | TokenCredential | SmsClientOptions,\n    maybeOptions: SmsClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isSmsClientOptions(credentialOrOptions) ? credentialOrOptions : maybeOptions;\n    const libInfo = `azsdk-js-communication-sms/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.api = new SmsApiClient(url, pipeline);\n  }\n\n  /**\n   * Sends an SMS from a phone number that is acquired by the authenticated account, to another phone number.\n   *\n   * @param sendRequest - Provides the sender's and recipient's phone numbers, and the contents of the message\n   * @param options - Additional request options\n   */\n  public async send(\n    sendRequest: SmsSendRequest,\n    options: SmsSendOptions = { enableDeliveryReport: false }\n  ): Promise<SmsSendResult[]> {\n    const { operationOptions, restOptions } = extractOperationOptions(options);\n    const { span, updatedOptions } = createSpan(\"SmsClient-Send\", operationOptions);\n\n    try {\n      const response = await this.api.sms.send(\n        generateSendMessageRequest(sendRequest, restOptions),\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return response.value;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n"],"names":["SendMessageRequestMapper","coreHttp.operationOptionsToRequestOptionsBase","coreHttp.Serializer","Mappers.SmsSendResponse","Parameters.sendMessageRequest","Parameters.apiVersion","Parameters.endpoint","Parameters.contentType","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","operations.Sms","createSpanFunction","createClientLogger","generateUuid","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy","createPipelineFromOptions","operationOptionsToRequestOptionsBase","CanonicalCode"],"mappings":"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"}